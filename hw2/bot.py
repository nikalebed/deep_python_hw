import telebot
from telebot import types

TOKEN = '5746057060:AAGefVFRp4PXo2EQ6sRbLyS4RPHRm-K8y80'
banned = dict()
tasks = dict()
bot = telebot.TeleBot(TOKEN)

help_text = """ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞ (–±–æ—Ç –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–æ–º):
/help –≤—ã–≤–µ—Å—Ç–∏ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç
/mytasks –ø–æ—Å–º–æ—Ç–µ—Ä—Ç—å —Å–≤–æ–∏ –∑–∞–¥–∞—á–∏
/todo task –¥–æ–±–∞–≤—Ç—å –∑–∞–¥–∞–Ω–∏–µ –≤ todo-list
/done n —É–±—Ä–∞—Ç—å n-–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏–∑ todo-list–∞
/promote + reply –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–≥–æ, –∫–æ–≥–æ —Ö–æ—Ç–∏–º —Å–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–∞—Ç–∞
/ban + reply –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–≥–æ, –∫–æ–≥–æ –±–∞–Ω–∏–º
/unban @member —Ä–∞–∑–±–∞–Ω–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞
/stats —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º/–∞–¥–º–∏–Ω–∞–º
/leave –≤—ã–≥–Ω–∞—Ç—å –±–æ—Ç–∞ –∏–∑ —á–∞—Ç–∞
"""

@bot.message_handler(content_types=["new_chat_members"])
def foo(message):
    bot.reply_to(message, "–ê —Ç—ã —á—Ç–æ –∑–¥–µ—Å—å –¥–µ–ª–∞–µ—à—å?")

@bot.message_handler(commands=['help'])
def start(message):
  global help_text
  bot.send_message(message.chat.id, help_text)

@bot.message_handler(commands=['leave'], )
def leave_message(message):
  bot.send_message(message.chat.id, "üíÄüíÄüíÄ")
  bot.leave_chat(message.chat.id)

@bot.message_handler(commands=['stats'])
def stats(message):
  admins_cnt=len(bot.get_chat_administrators(message.chat.id))
  members_cnt=bot.get_chat_member_count(message.chat.id)
  bot.send_message(message.chat.id,'{} members\n{} admins'.format(members_cnt,admins_cnt))

@bot.message_handler(commands=['ban'])
def ban(message):
  if message.reply_to_message:
    if bot.ban_chat_member(message.chat.id,message.reply_to_message.from_user.id):
      bot.send_message(message.chat.id, '–≤ –±–∞–Ω, @'+ message.reply_to_message.from_user.username)
      banned['@'+ message.reply_to_message.from_user.username]= message.reply_to_message.from_user.id
    else:
      bot.send_message(message.chat.id, '—á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫. –Ω—É–∂–Ω–∞ /help?'+ message.reply_to_message.from_user.username)
  else:
    bot.send_message(message.chat.id, '–æ—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–≥–æ, –∫–æ–≥–æ –±–∞–Ω–∏—à—å...')

@bot.message_handler(commands=['promote'])
def promote(message):
  if message.reply_to_message:
    if(bot.promote_chat_member(message.chat.id, message.reply_to_message.from_user.id, True)):
      bot.send_message(message.chat.id, '—Ç—ã —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω @'+ message.reply_to_message.from_user.username)
    else:
      bot.send_message(message.chat.id, '—á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫. –Ω—É–∂–Ω–∞ /help?'+ message.reply_to_message.from_user.username)
  else:
    bot.send_message(message.chat.id, '–æ—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–≥–æ, –∫–æ–≥–æ promot–∏—à—å...')

@bot.message_handler(commands=['unban'])
def unban(message):
  user = telebot.util.extract_arguments(message.text)
  if user and user in banned:
    bot.send_message(message.chat.id, user + ' —Ç–µ–ø–µ—Ä—å –Ω–µ –≤ –±–∞–Ω–µ')
    bot.unban_chat_member(message.chat.id,banned[user])
  else:
    bot.send_message(message.chat.id, '–∫–æ–≥–æü§®')

def add_task(user,task):
  if user not in tasks:
    tasks[user] = []
  tasks[user]+=[task]

def done_task(user,task_number):
  del tasks[user][task_number]

def get_tasks(username):
  if username not in tasks or len(tasks[username])==0:
    return False  
  text = 'TODO:\n'
  for i, task in enumerate(tasks[username]):
    text+='{}) {}\n'.format(i+1, task)
  return text

def check_if_exists(user,task_number):
  return user in tasks and len(tasks[user])>=task_number

@bot.message_handler(commands=['todo'])
def todo(message):
  new_task = telebot.util.extract_arguments(message.text).replace('\n',' ')
  if new_task:
    add_task(message.from_user.username, new_task)
    bot.send_message(message.chat.id, '–¥–æ–±–∞–≤–∏–ªü§ì, –∫–æ–ª-–≤–æ –∑–∞–¥–∞—á: {}'.format(len(tasks[message.from_user.username])))
  else:
    bot.send_message(message.chat.id, 'todo WHAT? –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —É—Ç–æ—á–Ω–∏')

@bot.message_handler(commands=['mytasks'])
def mytasks(message):
  text = get_tasks(message.from_user.username)
  if text:
    bot.send_message(message.chat.id, text)
  else:
    bot.send_message(message.chat.id, '—É @{} –Ω–µ—Ç –¥–µ–ª'.format(message.from_user.username))

@bot.message_handler(commands=['done'])
def done(message):
  try:
    task_number = int(telebot.util.extract_arguments(message.text))
    if check_if_exists(message.from_user.username, task_number):
      done_task(message.from_user.username, task_number-1)
      bot.send_message(message.chat.id, '–º–æ–ª–æ–¥–µ—Ü!, –∫–æ–ª-–≤–æ –∑–∞–¥–∞—á: {}'.format(len(tasks[message.from_user.username])))
    else:
      bot.send_message(message.chat.id, '—É —Ç–µ–±—è –Ω–µ—Ç —Ç–∞–∫–æ–π –∑–∞–¥–∞—á–∏')
  except:
    bot.send_message(message.chat.id, 'done WHAT? –Ω—É–∂–µ–Ω –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏')
    return


bot.polling(none_stop=True, interval=0)
